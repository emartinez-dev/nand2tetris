// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
        // Create whether or not we have to update the memory, it's always on load, inc or reset
        Or(a=load, b=inc, out=loadOrInc);
        Or(a=loadOrInc, b=reset, out=update);
        // Create empty array for when reset is true
        And16(out=resetAmount);

        // Return the content of the memory and feed it with finalAmount
        Register (in=finalAmount, load=update, out=memoOutput);
        Inc16(in=memoOutput, out=memoPlusOne);

        // Result of increasing memory or not
        Mux16(a=memoOutput, b=memoPlusOne, sel=inc, out=incOut);

        // Result of loading the input values or the calculated value
        Mux16(a=incOut, b=in, sel=load, out=loadOut);

        // Result of resetting the final value or not
        Mux16(a=loadOut, b=resetAmount, sel=reset, out=finalAmount);
        And16(a=memoOutput, b=true, out=out);
}